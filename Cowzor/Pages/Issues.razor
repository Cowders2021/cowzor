@page "/issues"
@inject HttpClient Http

<h1>Registrerte problemer</h1>

@if (issues == null)
{
    <p><em>Henter data...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Text</th>
                <th>Beskrivels</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var issue in issues)
            {
                <tr>
                    <td>@(issue.id)</td>
                    <td>@(issue.text)</td>
                    <td>@(issue.desctiption)</td>
                    <td><button class="fka-btn-warning" @onclick=@(async (e) => DeleteItem(e, issue.id))>Slett</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private List<Issue> issues = null;

    private const string api = "https://cowderspictures.azurewebsites.net/api/Issues";
    protected override async Task OnInitializedAsync()
    {
        //var div = await Http.GetStringAsync("sample-data/issues.json");
        await getFromServer();
        //issues = await Http.GetFromJsonAsync<List<Issue>>(api);
        //issues = await Http.GetFromJsonAsync<List<Issue>>("sample-data/issues.json");
        //forecast = await Http.GetFromJsonAsync<FkaWeatherforecast>("https://cors-anywhere.herokuapp.com/" + api);
        //forecast = await Http.GetFromJsonAsync<FkaWeatherforecast>("sample-data/weather.json");
    }

    private async void DeleteItem(MouseEventArgs e, int id)
    {
        issues = issues.Where((i) => i.id != id).ToList();
        await getFromServer();
    }

    private async Task getFromServer()
    {
        issues = await Http.GetFromJsonAsync<List<Issue>>(api);
        StateHasChanged();
    }

    private class Issue
    {
        public int id { get; set; }
        public int customerId { get; set; }
        public string text { get; set; }
        public string desctiption { get; set; }
    }
}
